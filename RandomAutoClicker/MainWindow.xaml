<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:RandomAutoClicker.ViewModel"
        xmlns:converters="clr-namespace:RandomAutoClicker.Infrastructure.Converter"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Class="RandomAutoClicker.MainWindow"
        Title="RandomAutoClicker" Height="410" Width="725"
        ResizeMode="NoResize" >

    <Window.Resources>
        <converters:EnumBooleanConverter x:Key="enumBooleanConverter"/>
        <converters:InverseBooleanConverter x:Key="inverseBooleanConverter"/>
    </Window.Resources>

    <Grid Height="Auto" Margin="10,10,10,10" IsEnabled="{Binding IsKeyBindWorking, Converter={StaticResource inverseBooleanConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="100"/>
        </Grid.RowDefinitions>
        <GroupBox Margin="0" Grid.Row="0" IsEnabled="True" Width="Auto" Height="Auto">
            <GroupBox.Header >
                <TextBlock FontWeight="Bold" Text="Where to Click?"/>
            </GroupBox.Header>
            <StackPanel IsEnabled="{Binding IsMenuEnabled}">
                <!--<RadioButton IsChecked="{Binding IsUnderMouseClicker, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Content="Wherever Mouse Cursor is when Starting the Mouse Click"></RadioButton>-->
                <RadioButton IsChecked="{Binding ClickArea, ConverterParameter=FullScreen, Converter={StaticResource enumBooleanConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Content="Random Location anywhere on Total Desktop Area" Margin="0 10 0 0"/>
                <RadioButton IsChecked="{Binding ClickArea, ConverterParameter=Area, Converter={StaticResource enumBooleanConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" x:Name="RectAreaRadioButton" Content="Random Location within given below Rectangular Area"/>
                <GroupBox IsEnabled="{Binding IsChecked, ElementName=RectAreaRadioButton}">
                    <Grid Width="Auto">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <StackPanel Margin="0,5,5,0" Grid.Column="0" Grid.Row="0" Orientation="Horizontal">
                            <TextBlock Text="X:" TextAlignment="Center" Width="40"/>
                            <TextBox DataContext="{Binding Area}" Text="{Binding Path=X, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" TextAlignment="Center" Width="100" Height="20"/>
                            <StackPanel Orientation="Vertical">
                                <Button Command="{Binding XUpCommand}" Width="15" Height="10"/>
                                <Button Command="{Binding XDownCommand}" Width="15" Height="10"/>
                            </StackPanel>
                        </StackPanel>
                        <StackPanel Margin="0,5,5,5" Grid.Column="0" Grid.Row="1" Orientation="Horizontal">
                            <TextBlock Text="Width:" FontSize="12" TextAlignment="Center" Width="40"/>
                            <TextBox DataContext="{Binding Area}" Text="{Binding Path=Width, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextAlignment="Center" Width="100" Height="20"/>
                            <StackPanel Orientation="Vertical">
                                <Button Command="{Binding WidthUpCommand}" Width="15" Height="10"/>
                                <Button Command="{Binding WidthDownCommand}" Width="15" Height="10"/>
                            </StackPanel>
                        </StackPanel>
                        <StackPanel Margin="0,5,5,0" Grid.Column="1" Grid.Row="0" Orientation="Horizontal">
                            <TextBlock Text="Y:" TextAlignment="Center" Width="40"/>
                            <TextBox DataContext="{Binding Area}" Text="{Binding Path=Y, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextAlignment="Center" Width="100" Height="20"/>
                            <StackPanel Orientation="Vertical">
                                <Button Command="{Binding YUpCommand}" Width="15" Height="10"/>
                                <Button Command="{Binding YDownCommand}" Width="15" Height="10"/>
                            </StackPanel>
                        </StackPanel>
                        <StackPanel Margin="0,5,5,5" Grid.Column="1" Grid.Row="1" Orientation="Horizontal">
                            <TextBlock Text="Height:" FontSize="12" TextAlignment="Center" Width="40"/>
                            <TextBox DataContext="{Binding Area}" Text="{Binding Height, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextAlignment="Center" Width="100" Height="20"/>
                            <StackPanel Orientation="Vertical">
                                <Button Command="{Binding HeightUpCommand}" Width="15" Height="10"/>
                                <Button Command="{Binding HeightDownCommand}" Width="15" Height="10"/>
                            </StackPanel>
                        </StackPanel>
                    </Grid>

                </GroupBox>
            </StackPanel>
        </GroupBox>
        <GroupBox IsEnabled="{Binding IsMenuEnabled}" Grid.Row="0" Grid.Column="1">
            <GroupBox.Header >
                <TextBlock FontWeight="Bold" Text="Delay between Clicks"/>
            </GroupBox.Header>
            <StackPanel Margin="0 10 0 0">
                <RadioButton IsChecked="{Binding ClickDelay, ConverterParameter=Random, Converter={StaticResource enumBooleanConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" x:Name="RandomIntervalRadioButton" Content="Random interval (in milliseconds) between"/>
                <GroupBox IsEnabled="{Binding IsChecked, ElementName=RandomIntervalRadioButton}" VerticalAlignment="Top" Height="Auto">
                    <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                        <StackPanel Margin="20 5 30 3" Orientation="Horizontal" Width="Auto" VerticalAlignment="Top" HorizontalAlignment="Left">
                            <TextBox DataContext="{Binding DelayRange}" Text="{Binding Path=From, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Height="20" Width="60" TextAlignment="Center"/>
                            <StackPanel Orientation="Vertical" Height="20">
                                <Button Command="{Binding DelayBeetwenStartUpCommand}" Width="15" Height="10"/>
                                <Button Command="{Binding DelayBeetwenStartDownCommand}" Width="15" Height="10"/>
                            </StackPanel>
                        </StackPanel>
                        <TextBlock Margin="25 0 25 0" VerticalAlignment="Center" Text="And"/>
                        <StackPanel Margin="30 5 0 3" Orientation="Horizontal" Width="Auto" VerticalAlignment="Center" HorizontalAlignment="Left">
                            <TextBox DataContext="{Binding DelayRange}" Text="{Binding Path=To, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Height="20" Width="60" TextAlignment="Center"/>
                            <StackPanel Orientation="Vertical" Height="20">
                                <Button Command="{Binding DelayBeetwenEndUpCommand}" Width="15" Height="10"/>
                                <Button Command="{Binding DelayBeetwenEndDownCommand}" Width="15" Height="10"/>
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                </GroupBox>
                <RadioButton x:Name="FixedDelayRadioButton" IsChecked="{Binding ClickDelay, ConverterParameter=Fixed, Converter={StaticResource enumBooleanConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0 5 0 0" Content="Fixed delay (in milliseconds) between clicks"/>
                <GroupBox IsEnabled="{Binding IsChecked, ElementName=FixedDelayRadioButton}">
                    <StackPanel HorizontalAlignment="Center" Margin="0 5 0 0" Width="Auto" Orientation="Horizontal">
                        <TextBox Text="{Binding FixedDelay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="100" Height="20" TextAlignment="Center"/>
                        <StackPanel Orientation="Vertical">
                            <Button Command="{Binding FixedDelayUpCommand}" Width="15" Height="10"/>
                            <Button Command="{Binding FixedDelayDownCommand}" Width="15" Height="10"/>
                        </StackPanel>
                    </StackPanel>
                </GroupBox>
            </StackPanel>
        </GroupBox>
        <GroupBox IsEnabled="{Binding IsMenuEnabled}" Grid.Row="1" Grid.ColumnSpan="2">
            <GroupBox.Header>
                <TextBlock FontWeight="Bold" Text="Select click type here"/>
            </GroupBox.Header>
            <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                <RadioButton IsChecked="{Binding ClickType, ConverterParameter=None, Converter={StaticResource enumBooleanConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="10 5 10 5" Content="None"/>
                <RadioButton IsChecked="{Binding ClickType, ConverterParameter=LeftClick, Converter={StaticResource enumBooleanConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="10 5 10 5" Content="Left click"/>
                <RadioButton IsChecked="{Binding ClickType, ConverterParameter=RightClick, Converter={StaticResource enumBooleanConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="10 5 10 5" Content="Right click"/>
                <RadioButton IsChecked="{Binding ClickType, ConverterParameter=LeftDoubleClick, Converter={StaticResource enumBooleanConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="10 5 10 5" Content="Left double click"/>
                <RadioButton IsChecked="{Binding ClickType, ConverterParameter=RightDoubleClick, Converter={StaticResource enumBooleanConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="10 5 10 5" Content="Right double click"/>
            </StackPanel>
        </GroupBox>
        <GroupBox Grid.Row="2" Visibility="Hidden">
            <GroupBox.Header>
                <TextBlock FontWeight="Bold" Text="How many mouse click to automate"/>
            </GroupBox.Header>
            <StackPanel>
                <RadioButton Margin="0 10 0 0" Content="Keep on clicking until stopped"/>
                <StackPanel Orientation="Horizontal">
                    <RadioButton VerticalAlignment="Center" Content="Stop clicking after automating"/>
                    <TextBox Margin="40 0 0 0" TextAlignment="Center" Width="100" Height="18"/>
                    <StackPanel>
                        <Button Width="15" Height="9"/>
                        <Button Width="15" Height="9"/>
                    </StackPanel>
                </StackPanel>
            </StackPanel>
        </GroupBox>
        <GroupBox Grid.Row="2" Grid.Column="1">
            <GroupBox.Header>
                <TextBlock FontWeight="Bold" Text="Key to start and stop mouse click"/>
            </GroupBox.Header>
            <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                <TextBox IsReadOnly="True" Text="{Binding BindedKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Height="20" Width="105" Margin="10,12"/>
                <Button Command="{Binding BindKeyStartCommand}" Height="20" Content="Bind"  Margin="10" Padding="15 0"/>
            </StackPanel>
        </GroupBox>
        <Button Grid.Column="0" Grid.Row="3" Command="{Binding Start}" Content="START"/>
        <Button Grid.Column="1" Grid.Row="3" Command="{Binding Stop}" Content="STOP"/>
    </Grid>
</Window>
